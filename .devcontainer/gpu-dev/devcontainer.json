// This is a bigger devcontainer for developing cog
{
	// Set requirements for codespaces usage.
	"hostRequirements": {
		"cpus": 4,
		"memory": "4gb",
		"storage": "16gb",
		"gpu": true
	},
	"name": "Docker Compose + GPU",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.yml"
	],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "dev",
	"customizations": {
		"codespaces": {
			"openFiles": [
				"scratch_run.sh"
			]
		},
		"vscode": {
			"extensions": [
				"ms-vsliveshare.vsliveshare",
				"timonwong.shellcheck"
			]
		}
	},
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace/op-replay-clipper/",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],
	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "robin"
}